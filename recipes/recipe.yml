---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: template
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/silverblue-main
image-version: 42 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - source: system
        destination: / # copies files/system/* (* means everything inside it) into your image's root folder /

  - type: dnf
    repos:
      copr:
        - atim/starship
    install:
      packages:
        - micro
        - starship
    remove:
      packages:
        # example: removing firefox (in favor of the flatpak)
        # "firefox" is the main package, "firefox-langpacks" is a dependency
        - firefox
        - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: default-flatpaks
    configurations:
      - notify: true # Send notification after install/uninstall is finished (true/false)
        scope: system
        # If no repo information is specified, Flathub will be used by default
        install: # system flatpaks we want all users to have and not remove
          - org.mozilla.firefox
          - org.gnome.Loupe
      - scope: user # Also add Flathub user repo, but no user packages

  - type: signing # this sets up the proper policy & signing files for signed images to work fully

  # ----------------------------------------------
# --- 여기부터 Realtek USB 드라이버 추가 ---
# ----------------------------------------------

  - type: containerfile
    snippets:
      # 1. 드라이버 빌드에 필요한 도구들(개발 도구, Git)을 설치합니다.
      - RUN rpm-ostree install -y kernel-devel gcc make git

      # 2. GitHub에서 USB 드라이버 소스 코드를 /tmp/ 폴더로 다운로드(복제)합니다.
      - RUN git clone https://github.com/morrownr/rtl8852bu-20240418.git /tmp/rtl8852bu

      # 3. 소스 코드 폴더로 이동하여 드라이버를 빌드(make)하고 설치(make install)합니다.
      - RUN cd /tmp/rtl8852bu && make && make install

      # 4. 커널이 새 드라이버를 인식하도록 갱신하고, 필요 없어진 소스 코드 폴더를 삭제합니다.
      - RUN depmod -a && rm -rf /tmp/rtl8852bu

# ----------------------------------------------
# --- 여기까지 추가 ---
# ----------------------------------------------
