---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: template
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/silverblue-main
image-version: 42 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - source: system
        destination: / # copies files/system/* (* means everything inside it) into your image's root folder /

  - type: dnf
    repos:
      copr:
        - atim/starship
    install:
      packages:
        - micro
        - starship
    remove:
      packages:
        # example: removing firefox (in favor of the flatpak)
        # "firefox" is the main package, "firefox-langpacks" is a dependency
        - firefox
        - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: default-flatpaks
    configurations:
      - notify: true # Send notification after install/uninstall is finished (true/false)
        scope: system
        # If no repo information is specified, Flathub will be used by default
        install: # system flatpaks we want all users to have and not remove
          - org.mozilla.firefox
          - org.gnome.Loupe
      - scope: user # Also add Flathub user repo, but no user packages

  - type: signing # this sets up the proper policy & signing files for signed images to work fully
  - type: containerfile
    snippets:
      # 1단계: *** 여기가 수정된 부분입니다 ***
      # 커널 모듈(모듈 폴더용), 커널 헤더(빌드용), 빌드 도구를 모두 설치합니다.
      - RUN rpm-ostree install -y kernel-modules kernel-devel gcc make git

      # 2단계: 설치된 Bazzite 커널 버전을 찾아서 빌드합니다. (이 부분은 이전과 동일)
      - |
        RUN set -eux && \
            # Bazzite 커널 버전을 찾습니다. (kernel-devel 기준)
            KVER=$(rpm -q kernel-devel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}') && \
            echo "--- Found Bazzite Kernel Version: ${KVER} ---" && \
            
            # Bazzite 커널 헤더가 설치된 "진짜" 경로를 KDIR 변수에 저장합니다.
            KDIR="/usr/src/kernels/${KVER}" && \
            echo "--- Using Kernel Build Path: ${KDIR} ---" && \
            
            # KDIR 경로가 실제로 존재하는지 확인합니다.
            ls -ld ${KDIR} && \

            # kernel-modules가 만든 모듈 경로가 존재하는지 확인합니다.
            ls -ld /lib/modules/${KVER} && \
            
            git clone https://github.com/morrownr/rtl8852bu-20240418.git /tmp/rtl8852bu && \
            cd /tmp/rtl8852bu && \
            
            # Bazzite 커널 경로를 기준으로 빌드합니다.
            make -C ${KDIR} M=$(pwd) modules && \
            make -C ${KDIR} M=$(pwd) install && \
            
            # Bazzite 커널($KVER)의 맵을 갱신합니다.
            depmod -a ${KVER} && \
            
            rm -rf /tmp/rtl8852bu
