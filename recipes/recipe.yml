---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: template
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bazzite-deck
image-version: 42 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - source: system
        destination: / # copies files/system/* (* means everything inside it) into your image's root folder /

  - type: dnf
    repos:
      copr:
        - atim/starship
    install:
      packages:
        - micro
        - starship
    remove:
      packages:
        # example: removing firefox (in favor of the flatpak)
        # "firefox" is the main package, "firefox-langpacks" is a dependency
        - firefox
        - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: default-flatpaks
    configurations:
      - notify: true # Send notification after install/uninstall is finished (true/false)
        scope: system
        # If no repo information is specified, Flathub will be used by default
        install: # system flatpaks we want all users to have and not remove
          - org.mozilla.firefox
          - org.gnome.Loupe
      - scope: user # Also add Flathub user repo, but no user packages

  - type: signing # this sets up the proper policy & signing files for signed images to work fully
  - type: containerfile
    snippets:
      # 1단계: Wi-Fi와 오디오 드라이버 빌드에 필요한 모든 도구 설치
      - RUN rpm-ostree install -y kernel-modules kernel-devel gcc make git

  - type: containerfile
    snippets:
      # 2단계: 설치된 커널 버전을 찾아 두 드라이버를 모두 빌드/설치
      - |
        RUN set -eux && \
            # --- 1. 커널 변수 설정 (공통) ---
            KVER_MOD=$(rpm -q kernel-modules --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}') && \
            KVER_DEVEL=$(rpm -q kernel-devel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}') && \
            KDIR="/usr/src/kernels/${KVER_DEVEL}" && \
            ls -ld ${KDIR} && \
            ls -ld /lib/modules/${KVER_MOD} && \
            
            # --- 2. Wi-Fi 드라이버 빌드 (lwfinger) ---
            echo "--- Building WiFi Driver ---" && \
            GIT_TERMINAL_PROMPT=0 git -c credential.helper="" clone https://github.com/lwfinger/rtw8852bu.git /tmp/rtw8852bu && \
            cd /tmp/rtw8852bu && \
            make -C ${KDIR} M=$(pwd) modules && \
            make -C ${KDIR} M=$(pwd) install && \
            cd / && \

            # --- 3. 오디오 드라이버 빌드 (egorenar) ---
            echo "--- Building Audio Driver ---" && \
            GIT_TERMINAL_PROMPT=0 git -c credential.helper="" clone https://github.com/egorenar/snd-hda-codec-cs8409.git /tmp/cs8409 && \
            cd /tmp/cs8409 && \
            make -C ${KDIR} M=$(pwd) && \
            make -C ${KDIR} M=$(pwd) install && \
            
            # --- 4. 모듈 맵 갱신 및 정리 (공통) ---
            echo "--- Running Depmod & Cleanup ---" && \
            depmod -a ${KVER_MOD} && \
            rm -rf /tmp/rtw8852bu /tmp/cs8409
            rm -rf /tmp/rtl8852bu
